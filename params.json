{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"cTraceo","body":"\r\n\r\n\r\n## Contents:\r\n * Features\r\n * Software Requirements\r\n * Makefile Configuration\r\n * Compilation & Installation\r\n * Matlab Configuration & Examples\r\n * License Notes.\r\n\r\n\r\n## Features:\r\n\r\n # Range dependent altimetry/bathymetry including range dependent\r\n  elastic properties (Compressional and shear wave speeds,\r\n  density, as well as compressional and shear attenuation);\r\n  \r\n # Range dependent sound speed fields;\r\n \r\n # Support for user-defined smooth objects within waveguide\r\n   (like rocks, marine mammals, submarines);\r\n   \r\n # Full suppport for backscattering (from altimetry/bathymetry\r\n   or objects);\r\n   \r\n # Allows free positioning of acoustic source and receivers\r\n   (altimetry/bathymetry as well as objects and receivers may be\r\n   positioned behind the source for modelling complex waveguides);\r\n   \r\n # Support for horizontal, vertical, rectangular and arbitrarily\r\n   shaped receiver arrays (allows modelling unusual array shapes,\r\n   multiple arrays as well as array distortions);\r\n   \r\n # Output options: ray trajectories and amplitudes, eigenray\r\n   search (with user-definable proximity threshhold), arrival\r\n   patterns, acoustic pressure, coherent transmission loss, as\r\n   well as particle velocity components (for modelling vector\r\n   sensors).\r\n   \r\n # Outputs are written to .mat files (does not require Matlab(R)\r\n   for compilation/usage)\r\n\r\n\r\n## Software Requirements\r\n\r\n# Matlab (Optional)\r\n  This software generates Matlab .mat-files as output, and\r\n  provides 2 methods for writing these files.\r\n  1 - Linking with Matlab(R) libraries during compilation.\r\n  2 - Using a set of internal functions.\r\n  Option 2 is now the recommended method and is enabled by default.\r\n  Although it is still possible to fall back to option 1 this\r\n  requires some extra configuration, is only supported on Linux\r\n  and requires a Matlab(R) License to be available.\r\n  \r\n\r\n# Compiler Support\r\n  cTraceo requires a C Compiler compatible with the ISO C99\r\n  Standard. This is mostly due to the need for complex\r\n  (Imaginary) Math.\r\n  \r\n * The GNU C Compiler\r\n   GCC fully supports the ISO C99 standard as of version 4.5.\r\n   The 4.3.x and 4.4.x versions partially implement the C99\r\n   standard and although warnings related to imaginary math may\r\n   be generated, the code is compiled successfully.\r\n   Successfully tested with versions 4.4.4 and 4.4.5 on Linux as\r\n   well as with version 4.5.3 on Windows (using Cygwin)\r\n  \r\n * Clang - LLVM C Language Frontend\r\n   The Clang compiler is the compiler used for development of the\r\n   cTraceo Model.\r\n   Successfully tested with versions 2.8 and 2.9 on Linux.\r\n  \r\n * MS Visual Studio\r\n   No version of Microsoft's Visual Studio C Compiler supports \r\n   the ISO C99 Standard, so compilation should not be possible.\r\n   Not tested.\r\n\r\n\r\n\r\n## Makefile Configuration\r\n   To compile this model the user may have to adapt the included\r\n   makefile to match the target system.\r\n   Although the options in the Makefile are mostly self-\r\n   -explanatory, a brief overview will be presented here:\r\n\r\n# The \"CC\" variable\r\n  Defines which command to invoke for compilation.\r\n  \r\n# The \"OS\" Variable:\r\n  Defines for which operating system to compile.\r\n\r\n# The \"ARCH\" variable\r\n  This is used to define whether to compile for 32 bit or 64 bit\r\n  systems.\r\n\r\n# The \"USE_MATLAB\" variable\r\n  When compiling cTraceo on Linux it is possible to choose between\r\n  using Matlab or the internal functions to write the result files.\r\n  If in doubt, leave at \"0\". Note that linking with matlab is only\r\n  supported in linux.\r\n   \r\n# The \"MATLAB_DIR\" variable\r\n  This variable should contain the base directory of the \r\n  system's Matlab(R) installation. This is needed when linking with \r\n  Matlab for writing .mat files, and is only possible on Linux.\r\n  \r\n\r\n# The \"MATLAB_VERSION\" variable\r\n  As different versions of Matlab require different variable\r\n  types for calling library functions, this option is required \r\n  for selecting the appropriate types.\r\n\r\n\r\n## Compilation and Installation\r\n\r\n # Linux\r\n   After the options descibed in \"Makefile Configuration\" have\r\n   been defined, just run:\r\n    \r\n   $> make\r\n   \r\n   This will compile the model and place a binary named \"ctraceo\"\r\n   in the \"bin/\" subdirectory.\r\n   \r\n # Windows\r\n   To compile cTraceo on windows, several steps are required:\r\n   \r\n    * Download and install Cygwin from www.cygwin.com.\r\n      Cygwin provides basic linux build tools (like 'make') for windows.\r\n      When installing Cygwin packages, select the following packages:\r\n        \"devel > gcc4\"\r\n        \"devel > make\"\r\n      Several other packages will be installed for dependencies.\r\n    \r\n    * Add \"c:/cygwin/bin\" to your system's PATH environment variable.\r\n    \r\n    * Open Cygwin. A command line will appear.\r\n      This command line provides an interface similar to Linux, and\r\n      allows for easy compilation of the model.\r\n      In Cygwin, navigate to location which contains cTraceo's source\r\n      code; this will look similar to:\r\n        $> cd /cygdrive/c/Users/username/Documents/models/cTraceo\r\n    \r\n    * Run:\r\n        $> make\r\n      If all goes well, this will produce an executable called\r\n      \"ctraceo.exe\" in the \"bin/\" subdirectory which can now be\r\n      used like any other windows executable.\r\n    \r\n   \r\n\r\n## Matlab Configuration & Example Cases\r\n   Several example cases are contained in the \"examples/\"\r\n   subdirectory. These examples depend on matlab functions\r\n   contained in the \"M-Files/\" subdirectory and as such this\r\n   folder should be added to the matlab path.\r\n   \r\n   Within the provided example files the model is invoked by\r\n   calling the command \"ctraceo\", and thus the \"bin/\" folder \r\n   containing the compiled cTraceo binary should be on the\r\n   system's PATH.\r\n\r\n\r\n## License Notes\r\n   The cTraceo Raytracing Model is released under the Creative\r\n   Commons Attribution-NonCommercial-ShareAlike 3.0 Unported\r\n   (CC BY-NC-SA 3.0) \r\n   http://creativecommons.org/licenses/by-nc-sa/3.0/\r\n\r\nBelow, a short, \"human readable\" version of the software license\r\nis shown. Read the attached \"license.txt\" file for the full text\r\nof the license.\r\n----------------------------------------------------------------\r\n\r\nIn Short:\r\nYou are free:\r\n    to Share — to copy, distribute and transmit the work\r\n    to Remix — to adapt the work \r\n\r\nUnder the following conditions:\r\n    Attribution   — You must attribute The cTraceo Raytracing\r\n                    Model to SiPLAB (with link to\r\n                    http://www.siplab.fct.ualg.pt/)\r\n    Noncommercial — You may not use this work for commercial \r\n                    purposes. \r\n    Share Alike   — If you alter, transform, or build upon this\r\n                    work, you may distribute the resulting work\r\n                    only under the same or similar license to\r\n                    this one. \r\n\r\nWith the understanding that:\r\n    Waiver        — Any of the above conditions can be waived if\r\n                    you get permission from the copyright holder.\r\n    Public Domain — Where the work or any of its elements is in\r\n                    the public domain under applicable law, that\r\n                    status is in no way affected by the license.\r\n    Other Rights  — In no way are any of the following rights\r\n                    affected by the license:\r\n                    # Your fair dealing or fair use rights, or\r\n                      other applicable copyright exceptions and\r\n                      limitations;\r\n                    # The author's moral rights;\r\n                    # Rights other persons may have either in\r\n                      the work itself or in how the work is used,\r\n                      such as publicity or privacy rights.\r\n    Notice        — For any reuse or distribution, you must make\r\n                    clear to others the license terms of this\r\n                    work. The best way to do this is with a link to:\r\n                    http://creativecommons.org/licenses/by-nc-sa/3.0/\r\n\r\n## NOTE:    cTraceo is research code under active development The code may contain bugs and updates are possible in the future.\r\n\r\n## cTraceo was written for project SENSOCEAN by:\r\nEmanuel Ey\r\nemanuel.ey@gmail.com\r\nCopyright (C) 2011 - 2012\r\nSignal Processing Laboratory\r\nUniversidade do Algarve\r\n  \r\n## cTraceo is derived from the FORTRAN 77 TRACEO code, written by:\r\nOrlando Camargo Rodriguez:\r\nCopyright (C) 2010\r\nOrlando Camargo Rodriguez\r\norodrig@ualg.pt\r\nUniversidade do Algarve\r\nPhysics Department\r\nSignal Processing Laboratory\r\n","tagline":"The cTraceo Underwater Acoustic Raytracing Model","google":""}