################################################################
## Version 1.1 ##
## Features/Changes:
 # Added support for reading input files from stdin (as opposed
   to reading them from disk).

 # Added support for irregularly spaced (or arbitrary) ray
   ray launching angles.
   Note that this feature required changes to the input file
   format; version 1.1 will read both input file versions
   transparently, but pre 1.1 versions do not handle the new
   input file format correclty.
 
 # Reduced number of interpolation calls when solving dynamic 
   equations by 50%, thus reducing overall raytracing
   time by ~5%.
 
 
## Bugfixes:
 # Fixed a bug where, when using the Regula Falsi method, the
   number arrivals [ADR] could under some conditions be different
   than the number of eigenrays [ERF].
   
 # Solved all compiler warnings when compiling with GCC.
   [tested with GCC 4.6.1]

################################################################
## Version 1.0 ##
## Features/Changes:
 # Replaced the Matlab file output API with a set of self
   written functions (see: https://github.com/EyNuel/matlabOut).
   This eliminates Matlab as a dependency, and makes compilation
   easier;
   
 # Added support for compilation on Microsoft Windows.
 
 # Removed 1D parabolic interpolation as an option for altimetry
   and bathymetry as it leads to innacurate results.
   
 # Renamed variables "rarray" and "zarray" to "arrayR" and
   "arrayZ" respectively

 # When calculating eigenrays or arrivals, more information is
   now provided. Namely: 
    iReturns:   indicates if ray inverted its horizontal direction.
    nSurRefl:   number of surface reflections
    nBotRefl:   number of bottom reflections
    nObjRefl:   number of object reflections
    nRefrac:    number of refraction points
    refrac_z:   z coordinates of refraction points
    refrac_r:   r coordinates of refraction points
    
 # Added "license.txt" to the distribution.

 # Added "manual.pdf" to the distribution.
 
 # Added help output to makefile and ctraceo executable.
 
 # Added pre-compiled binaries for Windows/Linux i686/ia64.
 
 # Added a decent header to the logfile and to the message
   printed to stdout when running the model.
 
 
## Bugfixes:
 # Fixed a bug where launched rays would be terminated to early.
 
 # Now correctly writing an "arrival" struct instead of an
   "eigenray" struct when calculating arrivals by Regula Falsi.
   
 # Fixed a bug where acoustic pressure would be incorrectly
   calculated for cases with large numbers of rays.

 # Many more small changes and behind-the-scenes fixes.
 
 
################################################################
## Beta 3 ##
## Features/Changes:
 # Added support to easily compile the model for different matlab
   versions.
   
 # Changed output format for Eigenrays to use matlab strutures.
   This way eigenrays are now associated to the hydrophones at 
   which they arrive. The rays launching angle along with the
   hydrophone's coordinates are also part of the new output
   struture.
 
 # Amplitudes and Delays are now also written to matlab strutures
 
 # When calculating Amplitudes and Delays, the maximum number of
   arrivals as well as the source depth are now written to the
   output file.
  
 # Added 48 M-Files with example cases to the "examples/"
   subdirectory.
   
 # Included a Matlab function to write Traceo input files in the
   distribution package.
   "wtraceoinfil.m" can be found in the "M-Files/" subdirectory.
   Also wrote documentation for this function, which is included
   in the form of comments.
 
 # Included a Matlab function to convert depth, temperature and
   salinity to sound velocity in Sea Water through Mackenzie's
   formula.
   "mackenzie.m" can be found in the "M-Files/" subdirectory.
   
 # Included a Matlab function to calculate Munk sound speed
   profiles.
   "munk.m" can be found in the "M-Files/" subdirectory.
 
 # Wrote a Matlab function to simplify the plotting of eigenrays
   as returned by cTraceo.
   "plotEigenRays.m" can be found in the "M-Files/" subdirectory.
   
 # Rewrote the Makefile to simplify compilation.
   Before attempting to compile, makefile now creates a "bin/"
   subdirectory if it doen's exist.
   The Makefile is now the only file which needs to be changed
   in order to compile the model.
   
 # Wrote a readme to help newcommers to get started with cTraceo.
 
 # Wrote this file.


## Bugfixes:
 # Fixed a bug where a ray could be endlessy reflected between
   surface and bottom.
   
 # Made many code changes to suppress (unnecessary) warnings 
   generated by GCC.
  
 # Fixed a bug where calculating the Particle Velocity along a
   Linear Array would cause an all-zero output.
   
 # Fixed a bug where a segfault could accur when determining
   Eigenrays by Proximity in combination with returning rays.
 
 # Fixed several memory leaks throughout the code.
 
 # Many more small bugfixes and code improvements.


################################################################
## Beta 2 ##
 # Ray Coordinates and other information is now written to matlab
   strutures instead of arrays.
   This should make it easier to handle the data in matlab.  

 # Behind the scenes code improvements.


################################################################
## Beta 1 ##
   All Features from the original Fortran 77 version of Traceo
   are now implemented.
